services:
  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile
    container_name: pulto_api
    env_file: .env
    ports:
      - "${API_PORT:-8080}:8080"
    depends_on:
      - db
      - minio
      - redis
      - mqtt
    volumes:
      - notebooks:/data/notebooks
      - assets:/data/assets
    command: uvicorn app.main:app --host 0.0.0.0 --port 8080 --reload

  worker:
    build:
      context: ./services/api
      dockerfile: Dockerfile
    container_name: pulto_worker
    env_file: .env
    depends_on:
      - db
      - minio
      - redis
    volumes:
      - notebooks:/data/notebooks
      - assets:/data/assets
    command: celery -A app.tasks.celery_app worker --loglevel=INFO

  db:
    image: postgres:16-alpine
    container_name: pulto_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-pulto}
      POSTGRES_USER: ${POSTGRES_USER:-pulto}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pulTopass}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: pulto_redis
    ports:
      - "${REDIS_PORT:-6379}:6379"

  minio:
    image: minio/minio:latest
    container_name: pulto_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio12345}
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5

  mqtt:
    image: eclipse-mosquitto:2
    container_name: pulto_mqtt
    ports:
      - "${MQTT_PORT:-1883}:1883"
      - "${MQTT_WS_PORT:-9002}:9001"
    volumes:
      - ./services/mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro

volumes:
  notebooks:
  assets:
  db_data:
  minio_data:

